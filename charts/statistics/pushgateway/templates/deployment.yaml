# templates/deployment.yaml
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Values.appName }}
  namespace: {{ .Release.Namespace }}
  labels:
    app.kubernetes.io/name: {{ .Values.appName }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app.kubernetes.io/name: {{ .Values.appName }}
  template:
    metadata:
      labels:
        app.kubernetes.io/name: {{ .Values.appName }}
    spec:
      containers:
        - name: {{ .Values.containerName }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          args:
            {{- toYaml .Values.pushgateway.args | nindent 12 }}
          ports:
            - name: http
              containerPort: {{ .Values.containerPort }}
          livenessProbe:
            httpGet:
              path: {{ .Values.pushgateway.livenessProbe.path }}
              port: {{ .Values.pushgateway.livenessProbe.port }}
          readinessProbe:
            httpGet:
              path: {{ .Values.pushgateway.readinessProbe.path }}
              port: {{ .Values.pushgateway.readinessProbe.port }}
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          env:
            - name: "TZ"
              value: {{ .Values.timezone | quote }}
          volumeMounts:
            - name: pushgateway-storage
              mountPath: {{ .Values.persistence.mountPath }}
      volumes:
        - name: pushgateway-storage
          persistentVolumeClaim:
            claimName: {{ .Values.appName }}-pvc