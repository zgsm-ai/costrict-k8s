# values.yaml

# 应用配置
appName: chat-rag
containerName: chat-rag
containerPort: 8888

# 副本数
replicaCount: 2

# 镜像配置
image:
  repository: zgsm/chat-rag
  pullPolicy: IfNotPresent
  tag: "v1.1.8"

# 资源限制
resources:
  requests:
    memory: "4Gi"
    cpu: "2"
  limits:
    memory: "8Gi"
    cpu: "4"

# 配置文件参数
config:
  chat-api.yaml: |
    Name: chat-rag
    Host: 0.0.0.0
    Port: 8888

    # Model endpoints configuration
    LLMEndpoint: "http://higress-gateway.costrict.svc.cluster.local/v1/chat/completions"

    # Token processing configuration
    TokenThreshold: 40_000

    # Semantic API configuration
    SemanticApiEndpoint: "http://codebase-indexer-svc.costrict:8888/codebase-indexer/api/v1/search/semantic"
    TopK: 5
    SemanticScoreThreshold: 0.75

    # Logging configuration
    LogFilePath: "/data/logs/"
    LokiEndpoint: "http://loki.loki.svc.cluster.local:3100/loki/api/v1/push"
    LogScanIntervalSec: 10

    # Model configuration
    SummaryModel: "deepseek-v3"
    SummaryModelTokenThreshold: 64_000
    ClassifyModel: "deepseek-v3"

    # Split system prompt, used to compress system prompt
    SystemPromptSplitStr: "====\n\nRULES"

    # used recent user prompt messages nums
    RecentUserMsgUsedNums: 20

    # Department configuration
    DepartmentApiEndpoint: https://devops.sangfor.com/api/analysis/dam/work_id?work_id=

# 持久化存储配置
persistence:
  enabled: true
  accessModes:
    - ReadWriteMany
  size: 200Gi
  storageClassName: "costrict-nfs"
  mountPath: "/data"

# Service 配置
service:
  name: chat-rag-svc
  type: ClusterIP
  port: 8888
  targetPort: 8888

# ServiceMonitor 配置
serviceMonitor:
  enabled: true
  name: chat-rag-costrict
  namespace: monitoring
  path: /metrics
  interval: 15s
  labels: {}
  # 可选的 metricRelabelings 配置
  metricRelabelings: []
  # 可选的 relabelings 配置
  relabelings: []

# HPA 配置
hpa:
  enabled: true # 是否启用 HPA
  minReplicas: 2 # 最小副本数
  maxReplicas: 10 # 最大副本数
  targetCPUUtilizationPercentage: 80 # CPU 使用率目标百分比
  targetMemoryUtilizationPercentage: 80 # 内存使用率目标百分比
  behavior:
    scaleUp:
      stabilizationWindowSeconds: 30 # 扩容稳定窗口时间
      policies:
      - type: Percent
        value: 50 # 每次最多增加 50% 的副本数
        periodSeconds: 60
      - type: Pods
        value: 2 # 每次最多增加 2 个副本
        periodSeconds: 60
      selectPolicy: Max # 选择较大的策略
    scaleDown:
      stabilizationWindowSeconds: 300 # 缩容稳定窗口时间（5分钟）
      policies:
      - type: Percent
        value: 10 # 每次最多减少 10% 的副本数
        periodSeconds: 60
      - type: Pods
        value: 1 # 每次最多减少 1 个副本
        periodSeconds: 60
      selectPolicy: Min # 选择较小的策略